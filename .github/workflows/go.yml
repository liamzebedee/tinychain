# This workflow will build, vet, format a golang project, and install protoc with necessary plugins
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
  pull_request:

jobs:
  protobuf:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
        go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2

    - name: Generate protobuf files
      run: ./core/nakamoto/protobufs/build.sh

  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20.0'

    - name: Check Go code format
      run: |
        if [ -n "$(gofmt -l .)" ]; then
          echo "Go code is not formatted. Run 'go fmt' to format your code."
          exit 1
        fi

  vet:
    runs-on: ubuntu-latest
    needs: protobuf
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20.0'

    - name: Vet Go code
      run: go vet ./...

  build:
    runs-on: ubuntu-latest
    needs: protobuf
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20.0'

    - name: Build
      run: go build -v ./...

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20.0'

    - name: Test
      run: go test -v ./...
